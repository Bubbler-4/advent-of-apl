 P7S←{
     ⍝ Implement recursive topological sort
     Segs←#.U.Segs
     Trim←#.U.Trim
     (edges vertices)←↓⍉' 'Segs¨Trim↑'->'∘Segs¨⍵
     vertices←⊃¨vertices
     edges←(⊢,⍨(,'0')(,'⊢')↑⍨3-≢)¨edges  ⍝ Convert all edges to 3 segments
     results←¯1⍴⍨≢vertices
     ToBin←(16⍴2)∘⊤
     FromBin←2∘⊥
     Bin←{FromBin(ToBin ⍺)⍺⍺ ToBin ⍵}
     NOT←=Bin
     AND←∧Bin
     OR←∨Bin
     LSHIFT←{FromBin 16↑⍵⌽32↑ToBin ⍺}
     RSHIFT←LSHIFT∘-
     GetIdx←vertices∘⍳∘⊂
     Eval←{
         ∧/⍵∊⎕D:⍎⍵  ⍝ If given expr is number, cast to number
         idx←GetIdx ⍵  ⍝ Find index of that identifier
         value←idx⊃results
         0≤value:value  ⍝ Value already found
         (x f y)←idx⊃edges
         ⊢results[idx]←(∇ x)(⍎f)(∇ y)
     }
     vertices results⊣Eval¨vertices
 }
